name: Pre-merge Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: 18

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
          
      - name: Install Dependencies
        run: |
          cd backend
          npm ci
          
      - name: Lint
        run: |
          cd backend
          npm run lint
          
      - name: Type Check
        run: |
          cd backend
          npx tsc --noEmit
          
      - name: Unit Tests
        run: |
          cd backend
          npm run test:unit -- --ci
          
      - name: Check Test Coverage
        run: |
          cd backend
          npm run test:coverage -- --ci
          npx nyc check-coverage --lines 80 --functions 80 --branches 80
          
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install Dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Lint
        run: |
          cd frontend
          npm run lint
          
      - name: Type Check
        run: |
          cd frontend
          npx tsc --noEmit
          
      - name: Unit Tests
        run: |
          cd frontend
          npm test -- --watchAll=false --ci
          
      - name: Build
        run: |
          cd frontend
          npm run build
          
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Start Services
        run: |
          docker-compose up -d
          sleep 10
          
      - name: Check Services Health
        run: |
          curl -f http://localhost:3001/health || exit 1
          curl -f http://localhost:8001 || exit 1
          
      - name: Install Test Dependencies
        run: |
          cd backend
          npm ci
          
      - name: Run E2E Tests
        run: |
          cd backend
          npm run test:e2e -- --ci
          
      - name: Stop Services
        if: always()
        run: |
          docker-compose down -v
          
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
          
      - name: Check npm audit
        run: |
          cd backend && npm audit --production
          cd ../frontend && npm audit --production
